// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file RBIC1CdrAux.hpp
 * This source file contains some definitions of CDR related functions.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef _FAST_DDS_GENERATED_RBIC1_RBIC1CDRAUX_HPP_
#define _FAST_DDS_GENERATED_RBIC1_RBIC1CDRAUX_HPP_

#include "RBIC1.h"

constexpr uint32_t RBIC1_GetMessageRequest_max_cdr_typesize {4UL};
constexpr uint32_t RBIC1_GetMessageRequest_max_key_cdr_typesize {0UL};

constexpr uint32_t RBIC1_OutQuadReply_max_cdr_typesize {20UL};
constexpr uint32_t RBIC1_OutQuadReply_max_key_cdr_typesize {0UL};

constexpr uint32_t RBIC1_ZMD31050Sim1Reply_max_cdr_typesize {12UL};
constexpr uint32_t RBIC1_ZMD31050Sim1Reply_max_key_cdr_typesize {0UL};

constexpr uint32_t RBIC1_OutLinTLinReply_max_cdr_typesize {24UL};
constexpr uint32_t RBIC1_OutLinTLinReply_max_key_cdr_typesize {0UL};

constexpr uint32_t RBIC1_OutQuadTQuadRequest_max_cdr_typesize {60UL};
constexpr uint32_t RBIC1_OutQuadTQuadRequest_max_key_cdr_typesize {0UL};

constexpr uint32_t RBIC1_OutQuadRequest_max_cdr_typesize {32UL};
constexpr uint32_t RBIC1_OutQuadRequest_max_key_cdr_typesize {0UL};

constexpr uint32_t RBIC1_TQuadReply_max_cdr_typesize {20UL};
constexpr uint32_t RBIC1_TQuadReply_max_key_cdr_typesize {0UL};

constexpr uint32_t RBIC1_OutLinTQuadReply_max_cdr_typesize {32UL};
constexpr uint32_t RBIC1_OutLinTQuadReply_max_key_cdr_typesize {0UL};

constexpr uint32_t RBIC1_ZMD31050Cal1Reply_max_cdr_typesize {40UL};
constexpr uint32_t RBIC1_ZMD31050Cal1Reply_max_key_cdr_typesize {0UL};

constexpr uint32_t RBIC1_OutQuadTLinReply_max_cdr_typesize {28UL};
constexpr uint32_t RBIC1_OutQuadTLinReply_max_key_cdr_typesize {0UL};

constexpr uint32_t RBIC1_GenericRequest_max_cdr_typesize {84UL};
constexpr uint32_t RBIC1_GenericRequest_max_key_cdr_typesize {0UL};

constexpr uint32_t RBIC1_OutLinRequest_max_cdr_typesize {20UL};
constexpr uint32_t RBIC1_OutLinRequest_max_key_cdr_typesize {0UL};

constexpr uint32_t RBIC1_OutThirdRequest_max_cdr_typesize {40UL};
constexpr uint32_t RBIC1_OutThirdRequest_max_key_cdr_typesize {0UL};

constexpr uint32_t RBIC1_OutThirdReply_max_cdr_typesize {24UL};
constexpr uint32_t RBIC1_OutThirdReply_max_key_cdr_typesize {0UL};

constexpr uint32_t RBIC1_ZMD31050Sim1Request_max_cdr_typesize {64UL};
constexpr uint32_t RBIC1_ZMD31050Sim1Request_max_key_cdr_typesize {0UL};

constexpr uint32_t RBIC1_DLLVersionReply_max_cdr_typesize {268UL};
constexpr uint32_t RBIC1_DLLVersionReply_max_key_cdr_typesize {0UL};


constexpr uint32_t RBIC1_OutLinReply_max_cdr_typesize {16UL};
constexpr uint32_t RBIC1_OutLinReply_max_key_cdr_typesize {0UL};

constexpr uint32_t RBIC1_OutLinTQuadRequest_max_cdr_typesize {52UL};
constexpr uint32_t RBIC1_OutLinTQuadRequest_max_key_cdr_typesize {0UL};

constexpr uint32_t RBIC1_GetMessageReply_max_cdr_typesize {264UL};
constexpr uint32_t RBIC1_GetMessageReply_max_key_cdr_typesize {0UL};

constexpr uint32_t RBIC1_TQuadRequest_max_cdr_typesize {32UL};
constexpr uint32_t RBIC1_TQuadRequest_max_key_cdr_typesize {0UL};

constexpr uint32_t RBIC1_TLinReply_max_cdr_typesize {16UL};
constexpr uint32_t RBIC1_TLinReply_max_key_cdr_typesize {0UL};

constexpr uint32_t RBIC1_OutQuadTLinRequest_max_cdr_typesize {48UL};
constexpr uint32_t RBIC1_OutQuadTLinRequest_max_key_cdr_typesize {0UL};

constexpr uint32_t RBIC1_DLLVersionRequest_max_cdr_typesize {4UL};
constexpr uint32_t RBIC1_DLLVersionRequest_max_key_cdr_typesize {0UL};

constexpr uint32_t RBIC1_TLinRequest_max_cdr_typesize {20UL};
constexpr uint32_t RBIC1_TLinRequest_max_key_cdr_typesize {0UL};

constexpr uint32_t RBIC1_OutQuadTQuadReply_max_cdr_typesize {36UL};
constexpr uint32_t RBIC1_OutQuadTQuadReply_max_key_cdr_typesize {0UL};


constexpr uint32_t RBIC1_ZMD31050Cal1Request_max_cdr_typesize {68UL};
constexpr uint32_t RBIC1_ZMD31050Cal1Request_max_key_cdr_typesize {0UL};

constexpr uint32_t RBIC1_GenericReply_max_cdr_typesize {284UL};
constexpr uint32_t RBIC1_GenericReply_max_key_cdr_typesize {0UL};

constexpr uint32_t RBIC1_OutLinTLinRequest_max_cdr_typesize {40UL};
constexpr uint32_t RBIC1_OutLinTLinRequest_max_key_cdr_typesize {0UL};


namespace eprosima {
namespace fastcdr {

class Cdr;
class CdrSizeCalculator;



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const RBIC1::OutLinRequest& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const RBIC1::OutLinReply& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const RBIC1::TLinRequest& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const RBIC1::TLinReply& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const RBIC1::OutQuadRequest& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const RBIC1::OutQuadReply& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const RBIC1::OutThirdRequest& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const RBIC1::OutThirdReply& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const RBIC1::TQuadRequest& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const RBIC1::TQuadReply& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const RBIC1::OutLinTLinRequest& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const RBIC1::OutLinTLinReply& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const RBIC1::OutQuadTLinRequest& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const RBIC1::OutQuadTLinReply& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const RBIC1::OutLinTQuadRequest& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const RBIC1::OutLinTQuadReply& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const RBIC1::OutQuadTQuadRequest& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const RBIC1::OutQuadTQuadReply& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const RBIC1::ZMD31050Cal1Request& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const RBIC1::ZMD31050Cal1Reply& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const RBIC1::ZMD31050Sim1Request& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const RBIC1::ZMD31050Sim1Reply& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const RBIC1::DLLVersionRequest& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const RBIC1::DLLVersionReply& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const RBIC1::GetMessageRequest& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const RBIC1::GetMessageReply& data);











eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const RBIC1::GenericRequest& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const RBIC1::GenericReply& data);



} // namespace fastcdr
} // namespace eprosima

#endif // _FAST_DDS_GENERATED_RBIC1_RBIC1CDRAUX_HPP_

